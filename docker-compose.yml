services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8081:8081"
    networks:
      - network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8082:8081"
    networks:
      - network

  api-server:
    image: bongaquino/api-server:latest
    container_name: api-server
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8080 --reload
    networks:
      - network

volumes:
  mongo-data:
  redis-data:

networks:
  network:
    driver: bridge